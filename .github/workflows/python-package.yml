# Copyright (c) 2020 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pre-install
      run: |
        git clone https://github.com/SpiNNakerManchester/SupportScripts.git support
        support/rat.sh download
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python ./setup.py install
        pip install -r requirements-test.txt
        pip install 'pylint<2.5' python-coveralls 'coverage>=4.4,<5.0'
    - name: Lint with flake8
      run: |
        # run flake8
        flake8 spinn_utilities unittests
    - name: Run rat copyright enforcement
      run: |
        # Run rat
        support/rat.sh run
    - name: Test with pytest
      run: |
        pytest . --cov spinn_utilities
    - name: Build documentation with sphinx
      run: |
        cd doc/source
        sphinx-build -W -T -E -b html -d _build/doctrees-readthedocsdirhtml -D language=en . _build/html
        sphinx-build -W -T -b json -d _build/doctrees-json -D language=en . _build/json
        sphinx-build -W -T -b singlehtml -d _build/doctrees-readthedocssinglehtmllocalmedia -D language=en . _build/localmedia
    - name: Run coveralls and report coverage
      env:
        COVERALLS_SERVICE_NAME: 'GitHub CI'
        COVERALLS_REPO_TOKEN : ${{ secrets.GITHUB_TOKEN }}
        NODE_COVERALLS_DEBUG: 0
      run: |
        echo $COVERALLS_REPO_TOKEN
        echo $COVERALLS_SERVICE_NAME
        coveralls
        
